[
  {
    "index": "recKl8buUZTYRg3MZ",
    "category": "Course",
    "title": "mmapped",
    "body": "Explore the innovative 'mmapped' technology on the Internet Computer in this specialized course. Understand how memory-mapped files can be used to enhance the performance and scalability of your decentralized applications.",
    "languages": [
      "rust",
      "none"
    ],
    "level": [
      "intermediate",
      "expert"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "DeFi",
      "Tokens",
      "ICP Architecture",
      "Storage",
      "Bitcoin",
      "Canisters",
      "Rust",
      "ICP Ledger",
      "Token",
      "ICP",
      "Orthogonal Persistence",
      "Subnets",
      "Stable Memory",
      "Stable Structures",
      "Internet Identity",
      "ckBTC",
      "Candid"
    ],
    "tags": [
      "Canister Development",
      "DeFi",
      "Tokens",
      "ICP Architecture",
      "Storage",
      "Bitcoin"
    ],
    "link": "https://mmapped.blog/",
    "image": null
  },
  {
    "index": "recqd3jI8HZRHvI7o",
    "category": "Course",
    "title": "Inside the Internet Computer",
    "body": "This course offers a deep dive into the technical underpinnings and innovative features of the Internet Computer. Explore its unique node structure, governance model, and the science behind its high-speed transaction capabilities.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "ICP Architecture",
      "Governance",
      "Identity & Authentication",
      "Security",
      "Chainkey",
      "ICP",
      "NNS",
      "Consensus",
      "P2P",
      "NI-DKG",
      "Authentication",
      "Identity",
      "ICP Upgrades",
      "Certification",
      "Resumption",
      "Message Routing",
      "Canisters",
      "Bootstrapping",
      "State Synchronization",
      "Ingress Message Lifecycle",
      "Execution",
      "Security"
    ],
    "tags": [
      "ICP Architecture",
      "Governance",
      "Identity & Authentication",
      "Security"
    ],
    "link": "https://www.youtube.com/playlist?list=PLuhDt1vhGcrfHG_rnRKsqZO1jL_Pd970h",
    "image": "https://i.ytimg.com/vi/hWnsluxmRqc/maxresdefault.jpg"
  },
  {
    "index": "recbYDlHQ6J2clhR6",
    "category": "Course",
    "title": "The Azle Book",
    "body": "This book is intended to be an in-depth guide to canister development in TypeScript on the Internet Computer (IC).",
    "languages": [
      "none",
      "typescript"
    ],
    "level": [
      "beginner",
      "intermediate"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Storage",
      "Overview",
      "Canisters",
      "Query Calls",
      "Update Calls",
      "Azle Language",
      "Candid",
      "Stable Structures",
      "Stable Memory",
      "ICP Overview",
      "Inter Canister Calls"
    ],
    "tags": [
      "Canister Development",
      "Storage",
      "Overview"
    ],
    "link": "https://demergent-labs.github.io/azle/the_azle_book.html",
    "image": null
  },
  {
    "index": "recQ59FWXmZvUre4u",
    "category": "Course",
    "title": "Motoko Bootcamp",
    "body": "Master the Internet Computer’s native language, Motoko, in this comprehensive bootcamp. From basic syntax to advanced features, this course covers all you need to start building powerful and efficient smart contracts on ICP.",
    "languages": [
      "none",
      "motoko"
    ],
    "level": [
      "intermediate",
      "beginner"
    ],
    "contentType": [
      "text",
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Identity & Authentication",
      "Overview",
      "Canister Development",
      "Environment Setup",
      "Frontend",
      "Internet Identity",
      "WebAuthn",
      "Delegations",
      "Query Calls",
      "Update Calls",
      "Cycles",
      "Motoko Language",
      "Wasm",
      "Canisters",
      "Actor Model",
      "ICP",
      "HTTP Gateway",
      "Subnets",
      "Chainkey",
      "ICP Overview",
      "Candid UI",
      "Inter Canister Calls",
      "dfx",
      "Setup",
      "Candid"
    ],
    "tags": [
      "Identity & Authentication",
      "Overview",
      "Canister Development",
      "Environment Setup",
      "Frontend"
    ],
    "link": "https://www.youtube.com/playlist?list=PLeNYxb7vPrkhuCcBWVL1GHTc82-CqUE75",
    "image": "https://i.ytimg.com/vi/lHDDjLCZwnk/maxresdefault.jpg"
  },
  {
    "index": "recPRf7i9kmi0EHhb",
    "category": "Course",
    "title": "ICP Developer II (ES)",
    "body": "The purpose of this ICP Developer II is for you to continue developing the Canister frontend of your project and finish this week with your first DApp running 100% on-chain on the Internet Computer network",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "spanish"
    ],
    "fullTags": [
      "Canister Development",
      "Frontend",
      "Identity & Authentication",
      "dApp",
      "Frontend",
      "Internet Identity",
      "Authentication",
      "Deploying Canister",
      "Demo",
      "Spanish"
    ],
    "tags": [
      "Canister Development",
      "Frontend",
      "Identity & Authentication"
    ],
    "link": "https://icp-esp.gitbook.io/icp-developer-ii/",
    "image": null
  },
  {
    "index": "recGaPcMiYtKittQI",
    "category": "Course",
    "title": "TypeScript Smart Contract 101 ",
    "body": "In this beginner course on Decade, you will learn essential Internet Computer concepts and how to write canister smart contracts using TypeScript.",
    "languages": [
      "typescript",
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Environment Setup",
      "Azle Language",
      "Canisters",
      "Candid UI",
      "Stable Structures",
      "Setup",
      "Rust",
      "ICP Overview"
    ],
    "tags": [
      "Environment Setup"
    ],
    "link": "https://dacade.org/communities/icp/courses/typescript-smart-contract-101",
    "image": null
  },
  {
    "index": "recvcNLkHcs1N79KV",
    "category": "Course",
    "title": "ICP Rust Bootcamp",
    "body": "From core concepts, to the ICP EVM model, to hands-on experience with Rust using the Remix IDE, this Rise In bootcamp will open your eyes to the potential of Web3 development.",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "ICP Architecture",
      "Canister Development",
      "Environment Setup",
      "Frontend",
      "ICP",
      "ICP Overview",
      "Canisters",
      "Management Canister",
      "Nodes",
      "Inter Canister Calls",
      "Subnets",
      "Chainkey",
      "NNS",
      "Smart Contract",
      "Rust",
      "Environment Setup",
      "State Management",
      "Stable Structures",
      "Stable Memory",
      "Query Calls",
      "Update Calls",
      "Candid",
      "Frontend"
    ],
    "tags": [
      "Overview",
      "ICP Architecture",
      "Canister Development",
      "Environment Setup",
      "Frontend"
    ],
    "link": "https://www.risein.com/courses/build-on-internet-computer-with-icp-rust-cdk",
    "image": null
  },
  {
    "index": "recgiB7RLdzsnFxdJ",
    "category": "Course",
    "title": "TypeScript Bootcamp",
    "body": "Web3 with TypeScript Bootcamp powered by Code & State and get started in Web3 in one week",
    "languages": [
      "typescript"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "DAO",
      "Canister Development",
      "Storage",
      "Frontend",
      "HTTPS Outcalls",
      "Bitcoin",
      "Security",
      "Azle Language",
      "ICP Overview",
      "Setup",
      "DAO",
      "Candid",
      "Stable Memory",
      "Stable Structures",
      "Asset Canister",
      "HTTP Gateway",
      "Boundary Nodes",
      "Service Worker",
      "Internet Identity",
      "Inter Canister Calls",
      "Cycles",
      "Timers",
      "HTTP Outcalls",
      "Bitcoin Integration",
      "Chainkey",
      "Threshold ECDSA",
      "ckBTC",
      "Best Practices",
      "Security"
    ],
    "tags": [
      "Overview",
      "DAO",
      "Canister Development",
      "Storage",
      "Frontend",
      "HTTPS Outcalls",
      "Bitcoin",
      "Security"
    ],
    "link": "https://www.youtube.com/playlist?list=PLeNYxb7vPrkj3SNntZ9ANchomvAPdrU8F",
    "image": "https://i.ytimg.com/vi/ShLxUMoqQd4/maxresdefault.jpg"
  },
  {
    "index": "rec9TFavDAZm1JQuk",
    "category": "Course",
    "title": "ICP Developer I (ES)",
    "body": "A 4-week basics course in Spanish that covers canister development using Motoko, creating a backend and frontend canister, and ending with building your own dapp on the Internet Computer.",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "spanish"
    ],
    "fullTags": [
      "Environment Setup",
      "Overview",
      "Canister Development",
      "Frontend",
      "Identity & Authentication",
      "Environment Setup",
      "ICP Overview",
      "Motoko Language",
      "CDK",
      "Canisters",
      "Cycles",
      "Frontend",
      "Deploying Canister",
      "Demo",
      "Spanish"
    ],
    "tags": [
      "Environment Setup",
      "Overview",
      "Canister Development",
      "Frontend",
      "Identity & Authentication"
    ],
    "link": "https://icp-esp.gitbook.io/icp-developer/",
    "image": null
  },
  {
    "index": "recXvo57f2kvA15na",
    "category": "Course",
    "title": "ICP 101",
    "body": "An introductory course that covers the essentials of the Internet Computer and its revolutionary approach to blockchain technology. Learn about the architecture, consensus mechanism, and the overall ecosystem of the ICP.",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "turkish"
    ],
    "fullTags": [
      "Overview",
      "ICP Overview",
      "Turkish"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://youtu.be/-WDGhxy-ArQ?si=WOfP2ZPD05nA4mcq",
    "image": null
  },
  {
    "index": "recEc6xkpHAoKTdD5",
    "category": "Course",
    "title": "ICP Zero to Dapp",
    "body": "Dive into decentralized application (Dapp) development on the Internet Computer in this practical course. You will learn to build and deploy your own Dapps, utilizing ICP's seamless integration capabilities and decentralized infrastructure.",
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "Bitcoin",
      "ICP Overview",
      "Canisters",
      "HTTP Outcalls",
      "Bitcoin Integration",
      "Tooling",
      "dApp",
      "CDK",
      "Internet Identity",
      "Demo"
    ],
    "tags": [
      "Overview",
      "Bitcoin"
    ],
    "link": "https://www.youtube.com/playlist?list=PLfEHHr3qexv8hKOJBV1XR10XhUKkyPIBp",
    "image": "https://i.ytimg.com/vi/vSA_UFajHmQ/maxresdefault.jpg"
  },
  {
    "index": "recK6MEkzaqkjzKwz",
    "category": "Course",
    "title": "Rust Smart Contract 101",
    "body": "This course provides an in-depth introduction to developing smart contracts using Rust on the Internet Computer. It focuses on the key aspects of Rust programming, smart contract security, and the deployment of contracts on the ICP network.",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Environment Setup",
      "ICP Overview",
      "Canisters",
      "Candid UI",
      "Stable Structures",
      "Setup",
      "Rust"
    ],
    "tags": [
      "Environment Setup"
    ],
    "link": "https://dacade.org/communities/icp/courses/rust-smart-contract-101",
    "image": null
  },
  {
    "index": "recE1PNMGBWcuSNdd",
    "category": "Content",
    "title": "Network Nervous System",
    "body": "The Network Nervous System (NNS) is an open algorithmic governance system that controls the Internet Computer network. A few of its most notable innovations are its ability to upgrade the protocol and software used by the node machines, onboard new node operators and machines into the network, and create new subnets (aka blockchains) to increase network capacity. Most importantly, the NNS works by accepting proposals and deciding to adopt or reject them based on voting activity by thousands of “neuron” holders.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "ICP Architecture",
      "Governance",
      "NNS",
      "ICP"
    ],
    "tags": [
      "ICP Architecture",
      "Governance"
    ],
    "link": "https://www.youtube.com/watch?v=hWnsluxmRqc&list=PLuhDt1vhGcrfHG_rnRKsqZO1jL_Pd970h",
    "image": "https://i.ytimg.com/vi/hWnsluxmRqc/maxresdefault.jpg"
  },
  {
    "index": "recHuQjyat36P096e",
    "category": "Content",
    "title": "Non-interactive Distributed Key Generation and Key Resharing",
    "body": "Noninteractive Distributed Key Generation (NI-DKG) is a new, noninteractive key resharing protocol. Each of the old signers only needs to broadcast a single message to the new signers. To ensure that this is done securely, many concepts from advanced cryptography are utilized, including encryption with forward secrecy and noninteractive zero-knowledge proofs. Throughout the lifetime of a subnet, it is known by a single public key, and the other parties on the Internet Computer do not have to keep track of changing public keys.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "ICP Architecture",
      "ICP",
      "NI-DKG"
    ],
    "tags": [
      "ICP Architecture"
    ],
    "link": "https://youtu.be/gKUi-2T7tdc?si=PbYDPuOWrnxGLwP-",
    "image": null
  },
  {
    "index": "recWO4qq4dwgISOVV",
    "category": "Content",
    "title": "Chain Key Cryptography",
    "body": "Chain Key cryptography is one of the fundamental breakthroughs enabling the Internet Computer to scale to millions of nodes. The most notable innovation of Chain Key cryptography is that the Internet Computer has a single public key, which enables any device to verify the authenticity of artifacts generated by the Internet Computer, even smart watches and mobile phones.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "ICP Architecture",
      "Chainkey",
      "ICP"
    ],
    "tags": [
      "ICP Architecture"
    ],
    "link": "https://www.youtube.com/watch?v=vUcDRFC09J0",
    "image": "https://i.ytimg.com/vi/vUcDRFC09J0/maxresdefault.jpg"
  },
  {
    "index": "recqEdMob32ewcur4",
    "category": "Content",
    "title": "Consensus Overview",
    "body": "Since the Internet Computer runs on a network of nodes in independent data centers located around the world, all subnets must process the same messages in the same order to ensure that they achieve the same state. To ensure that the nodes powering the subnets can agree on the order of messages to process, the Internet Computer relies on a novel consensus protocol, as described in this presentation.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "ICP Architecture",
      "Consensus",
      "ICP"
    ],
    "tags": [
      "ICP Architecture"
    ],
    "link": "https://www.youtube.com/watch?v=vVLRRYh3JYo&list=PLuhDt1vhGcrfHG_rnRKsqZO1jL_Pd970h&index=3",
    "image": "https://i.ytimg.com/vi/hWnsluxmRqc/maxresdefault.jpg"
  },
  {
    "index": "reci1mXZRxLR5DRta",
    "category": "Content",
    "title": "Identity and Authentication on the Internet Computer",
    "body": "Today, the main means of identity and authentication used online are usernames and passwords. The Internet Computer has replaced this model with a more advanced and secure method of cryptographic authentication, as described in this talk.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Identity & Authentication",
      "ICP",
      "Authentication",
      "Identity"
    ],
    "tags": [
      "Identity & Authentication"
    ],
    "link": "https://youtu.be/9eUTcCP_ELM?si=qZzh631nFpGTMh4l",
    "image": null
  },
  {
    "index": "recKMrdsDdBMfxagK",
    "category": "Content",
    "title": "Resumption",
    "body": "The Internet Computer blockchain is created by nodes in data centers located around the world that are running the Internet Computer Protocol (ICP), providing a secure and reliable way to run Canister smart contracts. To make the Internet Computer scalable, we increase the capacity by adding subnets (aka blockchains), where groups of Canisters run together. Canisters get security and reliability through an approach called replication. Replication enables nodes on the Internet Computer blockchain to resume and catch up to the latest state of the protocol.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "ICP Architecture",
      "ICP",
      "Resumption"
    ],
    "tags": [
      "ICP Architecture"
    ],
    "link": "https://youtu.be/H7HCqonSMFU?si=bZdBEA1BW1PsZV6Y",
    "image": null
  },
  {
    "index": "rec0g6IfeUhmJxJkb",
    "category": "Content",
    "title": "Upgrades",
    "body": "The Internet Computer blockchain is governed  autonomously by the Network Nervous System (NNS). One of the many duties of the NNS is to make upgrades to the ICP network that have been voted on by the community. Making upgrades to the blockchain requires the solution of several challenges created by running a decentralized protocol including how to allow arbitrary changes to the Internet Computer protocol, preserve all state, minimize downtime,  and roll out upgrades autonomously.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "ICP Architecture",
      "ICP",
      "ICP Upgrades"
    ],
    "tags": [
      "ICP Architecture"
    ],
    "link": "https://youtu.be/mPjiO2bk2lI?si=XRqCSGLN8JgsDnTJ",
    "image": null
  },
  {
    "index": "recwh8cXnjxZdjuow",
    "category": "Content",
    "title": "Peer-to-Peer (P2P)",
    "body": "The Internet Computer blockchain is designed to be secure, reliable, and scalable. Scalability is provided through subnets, which can be viewed as smaller Internet Computer blockchains that run Canister smart contracts on a selection of nodes. The peer-to-peer layer enables scalable, reliable, and secure communication between nodes of the same subnet. Peer-to-peer (“P2P”) collects and advertises messages from users, as well as from other nodes in the same subnet blockchain. Messages received by the peer-to-peer layer are replicated to all of the nodes in the subnet to ensure the security, reliability, and resiliency of the platform.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "ICP Architecture",
      "ICP",
      "P2P"
    ],
    "tags": [
      "ICP Architecture"
    ],
    "link": "https://youtu.be/HOQb0lKIy9I?si=EgikaRycgBSpmxIb",
    "image": null
  },
  {
    "index": "recFjEKXP8FiDAFzK",
    "category": "Content",
    "title": "Canister Lifecycle",
    "body": "Canister smart contracts enable the Internet Computer to host scalable and secure code. This talk covers how to create canisters on the Internet Computer, how to install and upgrade their software and how to top up canisters with cycles.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "ICP Architecture",
      "ICP",
      "Canisters"
    ],
    "tags": [
      "ICP Architecture"
    ],
    "link": "https://youtu.be/c5nv6vIG3OQ?si=PcedhopvIqOtTvmS",
    "image": null
  },
  {
    "index": "recbAvUapRNrIWFKU",
    "category": "Content",
    "title": "Effective Rust Canister",
    "body": "This document is a compilation of useful patterns and typical pitfalls I observed in the Rust code running on the Internet Computer (IC). Take everything in this document with a grain of salt: solutions that worked well for my problems might be suboptimal for yours. Every piece of advice comes with explanations to help you form your judgment.",
    "languages": [
      "rust"
    ],
    "level": [
      "intermediate"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Canisters",
      "Rust"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://mmapped.blog/posts/01-effective-rust-canisters",
    "image": null
  },
  {
    "index": "recRBnZWJaEJiPBrG",
    "category": "Content",
    "title": "State Synchronization",
    "body": "The Internet Computer Protocol has been designed to provide a reliable service despite some of the nodes failing or misbehaving. More precisely, even if a node has been offline for a while or is being added to a subnet, efficient mechanisms are in place to ensure that such a node is able to process messages quickly. This involves learning which other nodes to connect to, gathering the necessary key material and information to participate in the consensus algorithm, and obtaining a recent checkpoint of the state and the queues of the canister smart contracts hosted on the subnet. The latter is particularly challenging, since it can require several GiB of data to be transmitted to the node that is catching up.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "ICP Architecture",
      "ICP",
      "State Synchronization"
    ],
    "tags": [
      "ICP Architecture"
    ],
    "link": "https://youtu.be/WaNJINjGleg?si=yAgV9jMAc_b1Thwm",
    "image": null
  },
  {
    "index": "recjkYYRMTwFtCxEB",
    "category": "Content",
    "title": "Bootstrapping",
    "body": "Andra Cheruli is explaining how to bootstrap the Internet Computer, ensuring it is decentralized, secure, and user-authentic, by detailing its structure, initial configuration, and the distributed key generation protocol that transitions it from a centralized to a fully decentralized network.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "ICP Architecture",
      "ICP",
      "Bootstrapping"
    ],
    "tags": [
      "ICP Architecture"
    ],
    "link": "https://youtu.be/vGmlfLW3scA?si=8WPdM8xH8Opgd6eO",
    "image": null
  },
  {
    "index": "rectgvvb4jb2Z4fMd",
    "category": "Content",
    "title": "Ingress Message Lifecycle",
    "body": "When a user sends an update call to a canister smart contract on the Internet Computer, it traverses several components before it is actually executed. ",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "ICP",
      "Ingress Message Lifecycle"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://youtu.be/FJE1s8ZkUyg?si=ZAQW_qDRJ-FrCR3T",
    "image": null
  },
  {
    "index": "recnAXVxO3yXqcILA",
    "category": "Content",
    "title": "Execution",
    "body": "Aki Singhania, Engineering Manager from DFINITY is explaining how the Internet Computer (IC) manages and executes applications called canisters, which are an advanced form of smart contracts. The talk covers canister development, execution, resource management, and the unique features of the IC that simplify these processes.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "ICP Architecture",
      "ICP",
      "Execution"
    ],
    "tags": [
      "ICP Architecture"
    ],
    "link": "https://youtu.be/UHA7W-8My_I?si=Jy13YMX0XR_KRg7c",
    "image": null
  },
  {
    "index": "reczaGf3VGbNJvefW",
    "category": "Content",
    "title": "Certified Variables",
    "body": "In a first step, P2P ensures that it is broadcast to a sufficiently large set of other nodes. At some point, consensus forms a block that contains the message and passes it in a batch to message routing, which in turn inserts it into its destination canister’s queue, where it waits for the scheduler to select the next message to be executed.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Security",
      "ICP",
      "Certification"
    ],
    "tags": [
      "Security"
    ],
    "link": "https://youtu.be/mZbFhRIHIiY?si=TKDU0qr4O6ScT455",
    "image": null
  },
  {
    "index": "recBJXTAI3YnZasaN",
    "category": "Content",
    "title": "Tutorial 1/2: Verifying Canisters (and More) using TLA+",
    "body": "Formal verification improves the quality of software systems by analyzing whether a model of the system satisfies a specification. Verification is particularly attractive in the blockchain context: while verification does have a cost, bugs often have a much higher one. ",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Security",
      "Execution",
      "Testing",
      "TLA"
    ],
    "tags": [
      "Security"
    ],
    "link": "https://youtu.be/N0qzuBgnCs4?si=PnA0QNsU5OhrWfJ2",
    "image": null
  },
  {
    "index": "rec1kGlcScTN1NqTY",
    "category": "Content",
    "title": "Tutorial 2/2: Verifying Canisters (This Time Really) and Dapps Using TLA+",
    "body": "Formal verification enhances software quality by ensuring a system model meets its specifications, which is especially valuable in the blockchain domain due to the high cost of bugs. TLA+ is a favored tool for \"lightweight\" verification, offering easier implementation with moderate guarantees. This tutorial introduces TLA+ and demonstrates its use in analyzing canisters, recommending the Visual Studio Code extension for participants.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Security",
      "Execution",
      "Testing",
      "TLA"
    ],
    "tags": [
      "Security"
    ],
    "link": "https://youtu.be/IoWBToG2410?si=Xnbzn9r43P3J2Pgu",
    "image": null
  },
  {
    "index": "rec4JmyaPPlxKHrae",
    "category": "Content",
    "title": "IC internals: XNet protocol",
    "body": "This article continues the previous post on state machine replication in the Internet Computer (IC), A swarm of replicated state machines. This time, we shall examine the protocol over which independent state machines (also known as subnets) communicate, the XNet protocol.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "ICP Architecture",
      "ICP",
      "Subnets"
    ],
    "tags": [
      "ICP Architecture"
    ],
    "link": "https://mmapped.blog/posts/08-ic-xnet",
    "image": null
  },
  {
    "index": "recWHt3PRSGeLnMIf",
    "category": "Content",
    "title": "IC internals: Internet Identity storage",
    "body": "The Internet Identity canister innovated a passwordless approach to authentication on the Internet Computer (IC). I was lucky to be among the first members of the team that launched this service. Despite the time shortage, the team pioneered a few engineering solutions, some of which later caught up in other services",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Storage",
      "Stable Memory",
      "Internet Identity",
      "ICP"
    ],
    "tags": [
      "Storage"
    ],
    "link": "https://mmapped.blog/posts/11-ii-stable-memory",
    "image": null
  },
  {
    "index": "recrdBpnPM4vvoG1C",
    "category": "Content",
    "title": "Using Cache Eviction for Side Channel Attacks",
    "body": "It is well known that processor caches can be used for side channel attacks to leak data from a vulnerable system. However, it is also largely assumed that this requires a somewhat reliable clock in order to measure execution times of individual or a small number of cache operations. This talk explains a different approach using cache eviction that allows to amplify the signal such that an arbitrarily (im)precise clock is sufficient. The talk also explains the applicability of this technique against WebAssembly execution engines, and in particular the Internet Computer and how it defends against this problem.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Security",
      "ICP",
      "Security"
    ],
    "tags": [
      "Security"
    ],
    "link": "https://youtu.be/ebTxXCRW_1I?si=XV0zA6MCx-KavLOF",
    "image": null
  },
  {
    "index": "rec0T8BTGOhxqa4Hg",
    "category": "Content",
    "title": "IC internals: the ICP ledger",
    "body": "The ICP ledger is one of the first smart contracts hosted on the Internet Computer (IC). As of December 2022, the ICP ledger holds hundreds of millions of dollars worth of tokens and never had a significant outage. This article wil examine some design choices powering this critical canister.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "DeFi",
      "Tokens",
      "ICP Ledger",
      "Token",
      "ICP"
    ],
    "tags": [
      "DeFi",
      "Tokens"
    ],
    "link": "https://mmapped.blog/posts/13-icp-ledger",
    "image": null
  },
  {
    "index": "recLufGpUa8qh1pTC",
    "category": "Content",
    "title": "What is the Internet Computer (ICP)? A beginner's explanation!",
    "body": "The Internet Computer is the first of its kind, a decentralized network that hosts unstoppable and tamperproof code at unlimited scale. \nThis blockchain is capable of securely serving web experiences directly to web browsers, processing and storing large amounts of data, interacting with Web 2.0 infrastructure, and even running transactions on other blockchains (Bitcoin, Ethereum, and more...). \nThis allows for the creation of trustless, multi-chain systems and services that can be built fully on-chain. \nThe Internet Computer represents the end-to-end decentralized future of all computing and is driving the growth of Web3. ",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "ICP",
      "Cycles",
      "Canisters",
      "Wasm",
      "HTTP Gateway",
      "Subnets",
      "Chainkey",
      "ICP Overview"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://www.youtube.com/watch?v=CaPby7fnROE",
    "image": "https://i.ytimg.com/vi/CaPby7fnROE/maxresdefault.jpg"
  },
  {
    "index": "recrCcQh83z3R7Dck",
    "category": "Content",
    "title": "Set up your environment for building on the Internet Computer (ICP)",
    "body": "In this video, we go through all the necessary steps for setting up your environment as a developer on the Internet Computer -  WSL2, DFX, Node & NPM, Visual Studio Code, Extensions, Local deployment and more!",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Environment Setup",
      "dfx",
      "Setup"
    ],
    "tags": [
      "Environment Setup"
    ],
    "link": "https://www.youtube.com/watch?v=DTDP7WYU07w",
    "image": "https://i.ytimg.com/vi/DTDP7WYU07w/maxresdefault.jpg"
  },
  {
    "index": "recEr4LgXvmLG69Og",
    "category": "Content",
    "title": "Query Methods",
    "body": "This article provides a comprehensive guide to using Azle for developing applications on the Internet Computer, detailing topics such as getting started, examples, deployment, project structure, server setup, assets, authentication, and various integration points like Bitcoin and Ethereum, alongside advanced topics like debugging, limitations, and performance optimization. It also includes specifics on how to create and use query methods within canisters, demonstrating their capabilities and limitations.",
    "languages": [
      "typescript"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Query Calls",
      "Azle Language"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://demergent-labs.github.io/azle/query_methods.html",
    "image": null
  },
  {
    "index": "recFPeEgoo1MJS0VW",
    "category": "Content",
    "title": "Azle (Beta)",
    "body": "Azle is a TypeScript and JavaScript Canister Development Kit (CDK) for the Internet Computer (IC), providing a runtime for building IC applications. While offering unique benefits like full TypeScript/JavaScript support and built-in devops, both Azle and the IC have drawbacks including security risks, limited scalability, and high latencies, making them unsuitable for all application use-cases.",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "ICP Overview"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://demergent-labs.github.io/azle/azle.html",
    "image": null
  },
  {
    "index": "recRCNMzAnNXBtFV9",
    "category": "Content",
    "title": "Update Methods",
    "body": "The article explains update methods on the Internet Computer (IC), highlighting their execution on multiple nodes with consensus and 2-5 seconds latency per call. It emphasizes using update methods judiciously due to latency and resource expenses, providing examples of efficient usage and limitations such as computation and storage constraints.",
    "languages": [
      "typescript"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Update Calls",
      "Azle Language"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://demergent-labs.github.io/azle/update_methods.html",
    "image": null
  },
  {
    "index": "recZJ2S4gFuXAhxSW",
    "category": "Content",
    "title": "Candid",
    "body": "Candid is an interface description language by DFINITY that enables interaction between canisters and clients across different languages through serialization and deserialization of Candid bytes. Azle simplifies this process by automatically encoding and decoding JavaScript values using CandidType objects, which define parameters, return types, and stable storage keys and values.",
    "languages": [
      "typescript"
    ],
    "level": [
      "intermediate"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Candid",
      "Azle Language"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://demergent-labs.github.io/azle/candid.html",
    "image": null
  },
  {
    "index": "recc612Sslovxxqd1",
    "category": "Content",
    "title": "Internet Computer Overview",
    "body": "The Internet Computer (IC) is a decentralized cloud platform. Actually, it is better thought of as a progressively decentralizing cloud platform. Its full vision is yet to be fulfilled.",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "ICP Overview"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://demergent-labs.github.io/azle/internet_computer_overview.html#internet-computer-overview",
    "image": null
  },
  {
    "index": "reckRxTHEVAMAWLB1",
    "category": "Content",
    "title": "Stable Structures",
    "body": "Stable structures in the Internet Computer (IC) provide data structures with familiar APIs for persistent storage across canister upgrades, utilizing stable memory which supports up to 96 GiB. Azle offers the StableBTreeMap structure, which simplifies reading and writing to stable memory and preserves data using unique memory ids, facilitating CRUD operations and complex database functionalities.",
    "languages": [
      "typescript"
    ],
    "level": [
      "intermediate"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Storage",
      "Canister Development",
      "Stable Structures",
      "Stable Memory",
      "Azle Language"
    ],
    "tags": [
      "Storage",
      "Canister Development"
    ],
    "link": "https://demergent-labs.github.io/azle/stable_structures.html",
    "image": null
  },
  {
    "index": "reckkVMvbheWngszN",
    "category": "Content",
    "title": "Canisters Overview",
    "body": "Canisters are Internet Computer (IC) applications. They are the encapsulation of your code and state, and are essentially Wasm modules.",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Canisters",
      "Query Calls",
      "Update Calls",
      "Azle Language"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://demergent-labs.github.io/azle/canisters_overview.html",
    "image": null
  },
  {
    "index": "recmyuy28WK81eRiK",
    "category": "Content",
    "title": "Cross-canister",
    "body": "The article explains implementing cross-canister calls using the Azle framework on the Internet Computer, covering canister definitions, imports, and usage for inter-canister communication, with examples and error-handling techniques. It also discusses composite queries, notifications, and sending cycles with calls.",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Inter Canister Calls",
      "Azle Language"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://demergent-labs.github.io/azle/cross_canister.html",
    "image": null
  },
  {
    "index": "recfUSgWzLSVW1Xz4",
    "category": "Content",
    "title": "SNS Neuron Following on Specific Topics",
    "body": "SNS implements liquid democracy similar to the NNS, where participants can lock tokens in neurons to vote manually, or follow other voting neurons. In this video, we demonstrate how you can set up your SNS neurons where you follow the votes of another neuron as a default fallback, while opting to vote manually on specific topics.",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "DAO",
      "SNS"
    ],
    "tags": [
      "DAO"
    ],
    "link": "https://www.youtube.com/watch?v=bgZ2VifhNcU",
    "image": "https://i.ytimg.com/vi/bgZ2VifhNcU/maxresdefault.jpg"
  },
  {
    "index": "recr4BiMvsHB8cUUR",
    "category": "Content",
    "title": "Chain-Key Bitcoin: A Decentralized Bitcoin Twin",
    "body": "Chain-Key Bitcoin (ckBTC) is now live on the Internet Computer. Acting as a bitcoin ‘twin’, ckBTC enables fast, low-fee, cryptographically secure, fully on-chain bitcoin transactions on the Internet Computer, bringing true decentralization to DeFi and the blockchain space.",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Bitcoin",
      "ckBTC",
      "Bitcoin Integration"
    ],
    "tags": [
      "Bitcoin"
    ],
    "link": "https://medium.com/dfinity/chain-key-bitcoin-a-decentralized-bitcoin-twin-ceb8f4ddf95e",
    "image": null
  },
  {
    "index": "recrLBluGDirVziaW",
    "category": "Content",
    "title": "Tokenomics",
    "body": "ICP.Lab Business Boosters is a virtual extension to the ICP.Lab physical workshop weeks in our Zurich HQ. The intention is to educate builders on non technical matters, specifically business topics.",
    "languages": [
      "none"
    ],
    "level": [
      "intermediate"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Tokenomics",
      "Tokenomics"
    ],
    "tags": [
      "Tokenomics"
    ],
    "link": "https://www.youtube.com/watch?v=-LnDHDsdmis",
    "image": "https://i.ytimg.com/vi/-LnDHDsdmis/maxresdefault.jpg"
  },
  {
    "index": "recCbrUTAy99LeDXG",
    "category": "Content",
    "title": "Chapter 4: Candid the language of the Internet Computer",
    "body": "This chapter explains how Candid enables communication between canisters written in different languages on the Internet Computer. It covers resolving type mismatches, defining Candid interfaces, and using Candid with the terminal, Candid UI, and front-end code. Understanding Candid is essential for effective canister interaction and integration.",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Candid"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://github.com/motoko-bootcamp/motoko-starter/blob/main/manuals/chapters/chapter-4/CHAPTER-4.MD",
    "image": null
  },
  {
    "index": "rechFYiSzVabjsoe9",
    "category": "Content",
    "title": "A new chapter in digital identity: Internet Identity",
    "body": "This appendix introduces Internet Identity as a secure alternative to traditional login methods, emphasizing the shift from passwords to digital signatures and WebAuthn. It addresses the challenges with passwords, explains the benefits of digital signatures, and outlines how Internet Identity enables secure management of identities for web services and decentralized applications.",
    "languages": [
      "none"
    ],
    "level": [
      "intermediate"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Identity & Authentication",
      "Internet Identity",
      "WebAuthn",
      "Delegations"
    ],
    "tags": [
      "Identity & Authentication"
    ],
    "link": "https://github.com/motoko-bootcamp/motoko-starter/blob/main/manuals/appendix/appendix-3/APPENDIX-3.MD#appendix-3-a-new-chapter-in-digital-identity-internet-identity",
    "image": null
  },
  {
    "index": "rece5HnLcOV2U3OJB",
    "category": "Content",
    "title": "Chapter 2: Common programming concepts",
    "body": "This chapter covers common programming concepts in Motoko, including variable declaration (with `let` for immutable and `var` for mutable variables), type annotations, and comments. It also explains function definitions, control flow constructs like if/else, loops, and switch/case expressions for pattern matching and decision making in code execution.",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Motoko Language"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://github.com/motoko-bootcamp/motoko-starter/blob/main/manuals/chapters/chapter-2/CHAPTER-2.MD",
    "image": null
  },
  {
    "index": "reclAE9Sr1Gk9vcDP",
    "category": "Content",
    "title": "Eliminating Smart Contract Bugs with TLA+",
    "body": "Temporal Logic of Actions (TLA+), a general toolkit that can exhaustively test software designs, also works on ckBTC smart contracts. Say goodbye to reentrancy bugs, and hello to more secure BTC <> ICP transfers.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Security",
      "Execution",
      "Testing",
      "TLA"
    ],
    "tags": [
      "Security"
    ],
    "link": "https://medium.com/dfinity/eliminating-smart-contract-bugs-with-tla-e986aeb6da24#75d4",
    "image": null
  },
  {
    "index": "rec4klqTXJJ7yVgV5",
    "category": "Content",
    "title": "Day 3 - Internet Identity as an authentication tool in IC",
    "body": "This day is explained;\n-The use of Internet Identity as an authentication system in IC\n-The use of Candid in development.",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "spanish"
    ],
    "fullTags": [
      "Identity & Authentication",
      "Internet Identity",
      "Authentication",
      "Spanish"
    ],
    "tags": [
      "Identity & Authentication"
    ],
    "link": "https://icp-esp.gitbook.io/icp-developer-ii/programa/dia-3-internet-identity-como-herramienta-de-autenticacion-en-ic",
    "image": null
  },
  {
    "index": "recHLn9KPDNfagUUi",
    "category": "Content",
    "title": "Day 2 - Start with frontend development",
    "body": "This day you will learn how to develop, deploy your Canisters and how to use having an interface. We are going to analyze how you can make your Frontend work and we will review Candid",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "spanish"
    ],
    "fullTags": [
      "Frontend",
      "Canister Development",
      "Frontend",
      "Spanish"
    ],
    "tags": [
      "Frontend",
      "Canister Development"
    ],
    "link": "https://icp-esp.gitbook.io/icp-developer-ii/programa/dia-2-inicia-con-el-desarrollo-frontend",
    "image": null
  },
  {
    "index": "recSHT9zaKzxInOnb",
    "category": "Content",
    "title": "Day 1 - Define the idea of your DApp to develop",
    "body": "We will have a strong start, this day we will attend to the following:\n- We will review the fundamentals of Internet Computer Protocol, we need to be clear about some concepts.\n- You will define the idea that you will develop during this week.",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "spanish"
    ],
    "fullTags": [
      "Canister Development",
      "dApp",
      "Spanish"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://icp-esp.gitbook.io/icp-developer-ii/programa/dia-1-define-la-idea-de-tu-dapp-a-desarrollar",
    "image": null
  },
  {
    "index": "recY07oqn1Ehl7nYR",
    "category": "Content",
    "title": "ckBTC internals: event log",
    "body": "The chain-key Bitcoin (ckBTC) project became publicly available on April 3, 2023. The ckBTC minter smart contract is the most novel part of the product responsible for converting Bitcoin to ckBTC tokens and back. This contract features several design choices that some developers might find insightful. This article describes how the ckBTC minter, which I will further refer to as the minter, organizes its storage.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Bitcoin",
      "Storage",
      "Canister Development",
      "ckBTC",
      "Stable Memory",
      "Stable Structures"
    ],
    "tags": [
      "Bitcoin",
      "Storage",
      "Canister Development"
    ],
    "link": "https://mmapped.blog/posts/19-eventlog",
    "image": null
  },
  {
    "index": "recjYS1MtURCy5AaI",
    "category": "Content",
    "title": "Day 4 - Deploying your project",
    "body": "This day will be dedicated to the deployment of projects in the CI network and the best practices to do this",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "spanish"
    ],
    "fullTags": [
      "Canister Development",
      "Deploying Canister",
      "Spanish"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://icp-esp.gitbook.io/icp-developer-ii/programa/dia-4-desplegando-tu-proyecto.",
    "image": null
  },
  {
    "index": "reccas7jnXbdS3ofY",
    "category": "Content",
    "title": "Chapter 3: Primitive Types in Motoko",
    "body": "This chapter teaches about primitive types in Motoko, including Nat for unbounded natural numbers, Int for integers, Bool for boolean values, Text for strings, Char for characters, Float for floating-point numbers, and bounded types like Nat32 and Int32 for memory efficiency and exact sizing. It also introduces the Blob type for binary large objects and the unit type () for functions that don't return any specific type.",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Motoko Language"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://github.com/motoko-bootcamp/motoko-starter/blob/main/manuals/chapters/chapter-3/CHAPTER-3.MD",
    "image": null
  },
  {
    "index": "recX3F7xs2JERMq0J",
    "category": "Content",
    "title": "Appendix 1: Deploying and managing a canister",
    "body": "In this appendix, we will deploy, interact and mange a canister. To illustrate all those interactions we will deploy a canister called Counter and experiment with it.You just need to follow along and copy the code!",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Canisters",
      "dfx",
      "Candid UI"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://github.com/motoko-bootcamp/motoko-starter/blob/main/manuals/appendix/appendix-1/APPENDIX-1.MD#",
    "image": null
  },
  {
    "index": "rec2ARKNT0Wp3bxev",
    "category": "Content",
    "title": "Variables, Types, Functions & Loops",
    "body": "Lecture from Motoko Bootcamp: Variables, Types, Functions & Loops.",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Motoko Language"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=0JVGWkd4tgQ",
    "image": "https://i.ytimg.com/vi/0JVGWkd4tgQ/maxresdefault.jpg"
  },
  {
    "index": "rec3u1MAP3GmUkmlH",
    "category": "Content",
    "title": "Anatomy of a Motoko project",
    "body": "Lecture from Motoko Bootcamp: Anatomy of a Motoko project ",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Frontend",
      "dfx",
      "Setup"
    ],
    "tags": [
      "Canister Development",
      "Frontend"
    ],
    "link": "https://www.youtube.com/watch?v=_T7GgPxxSKo",
    "image": "https://i.ytimg.com/vi/_T7GgPxxSKo/maxresdefault.jpg"
  },
  {
    "index": "recGG9HJ5xvgNIg6n",
    "category": "Content",
    "title": "Chapter 1: Fundamental concepts",
    "body": "This chapter teaches that canisters are the fundamental units of computation on the Internet Computer, functioning as containers for applications that handle user interactions via messages. It also explains that canisters use WebAssembly for execution, with Motoko as a high-level language designed for easy canister programming, and highlights the actor model for managing concurrent tasks within canisters.",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "Query Calls",
      "Update Calls",
      "Cycles",
      "Motoko Language",
      "Wasm",
      "Canisters",
      "Actor Model"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://github.com/motoko-bootcamp/motoko-starter/blob/main/manuals/chapters/chapter-1/CHAPTER-1.MD#chapter-1-fundamental-concepts",
    "image": null
  },
  {
    "index": "recLc3JYsjzUQNgBb",
    "category": "Content",
    "title": "Candid for engineers",
    "body": "Candid is the primary interface definition language for smart contracts hosted on the Internet Computer.\n\nMost prevalent data-interchange formats, such as Protocol Buffers and Thrift, come straight from engineering departments.\n\nCandid is different. Candid is a child of programming language designers who grew it from first principles. As a result, Candid makes sense but might feel alien to most engineers.\n\nThis article is an introduction to Candid I wish I had when I started using it.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "ICP Architecture",
      "Candid"
    ],
    "tags": [
      "Canister Development",
      "ICP Architecture"
    ],
    "link": "https://mmapped.blog/posts/20-candid-for-engineers",
    "image": null
  },
  {
    "index": "rectM1PVZQllxGnvn",
    "category": "Content",
    "title": "Constellation Book",
    "body": "If you're not yet familiar with blockchain, bitcoin, and IC, no worries. I'm here to give you the lowdown on the history of crypto!\n\nIf you've heard of IC but haven't gotten the full scoop yet, you've come to the right place to learn more.",
    "level": [
      "intermediate"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "Canister Development",
      "Security",
      "Bitcoin",
      "ICP",
      "Subnets",
      "Stable Memory",
      "Canisters",
      "Orthogonal Persistence",
      "Internet Identity",
      "Candid",
      "Execution",
      "ICP Overview",
      "Consensus",
      "vetKeys",
      "Chainkey",
      "Boundary Nodes",
      "TLA",
      "Threshold ECDSA",
      "Bitcoin Integration",
      "HTTP Gateway",
      "Actor Model"
    ],
    "tags": [
      "Overview",
      "Canister Development",
      "Security",
      "Bitcoin"
    ],
    "link": "https://neutronstardao.github.io/constellation.github.io/",
    "image": null
  },
  {
    "index": "rec4NNIylv3oH0t3j",
    "category": "Content",
    "title": "Explaining Frontend Code",
    "body": "ICP Rust Bootcamp: Explaining Frontend Code",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Frontend",
      "Canister Development",
      "Frontend"
    ],
    "tags": [
      "Frontend",
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=vmEFnNFRCP0",
    "image": "https://i.ytimg.com/vi/vmEFnNFRCP0/maxresdefault.jpg"
  },
  {
    "index": "rec8MEmavDCvHS1KS",
    "category": "Content",
    "title": "Creating Functions 3",
    "body": "ICP Rust Bootcamp: Creating Functions 3",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Smart Contract"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=LVlErds-LHk",
    "image": "https://i.ytimg.com/vi/LVlErds-LHk/maxresdefault.jpg"
  },
  {
    "index": "reca3CcxxDcicDmE6",
    "category": "Content",
    "title": "Creating Candid File",
    "body": "ICP Rust Bootcamp: Creating Candid File",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Smart Contract",
      "Candid"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=FNcC0UpUVa4",
    "image": "https://i.ytimg.com/vi/FNcC0UpUVa4/maxresdefault.jpg"
  },
  {
    "index": "recCbKkMtxlowdWW6",
    "category": "Content",
    "title": "Introduction to the Internet Computer (IC) ecosystem",
    "body": "ICP Rust Bootcamp: Introduction to the Internet Computer (IC) ecosystem",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "ICP",
      "ICP Overview",
      "Canisters",
      "Management Canister",
      "Nodes",
      "Inter Canister Calls",
      "Subnets",
      "Chainkey",
      "NNS"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://www.youtube.com/watch?v=yEDdme2dH8Y",
    "image": "https://i.ytimg.com/vi/yEDdme2dH8Y/maxresdefault.jpg"
  },
  {
    "index": "recLCY5lveRFRYxXu",
    "category": "Content",
    "title": "Creating Smart Contract",
    "body": "ICP Rust Bootcamp: Creating Smart Contract",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Smart Contract",
      "ICP",
      "Rust"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=i0p39Nj6WVM",
    "image": "https://i.ytimg.com/vi/i0p39Nj6WVM/maxresdefault.jpg"
  },
  {
    "index": "recMxZ9GkRrUAae31",
    "category": "Content",
    "title": "Testing and Deploying Smart Contract",
    "body": "ICP Rust Bootcamp: Testing and Deploying Smart Contract",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Smart Contract"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=8BiXfxyndcA",
    "image": "https://i.ytimg.com/vi/8BiXfxyndcA/maxresdefault.jpg"
  },
  {
    "index": "recPVZWD6tBWt7UmB",
    "category": "Content",
    "title": "Creating Smart Contract for Final Project",
    "body": "ICP Rust Bootcamp: Creating Smart Contract for Final Project",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Smart Contract"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=y5-iCHehei8",
    "image": "https://i.ytimg.com/vi/y5-iCHehei8/maxresdefault.jpg"
  },
  {
    "index": "recQOjryMwuksxSj9",
    "category": "Content",
    "title": "State Management 2",
    "body": "ICP Rust Bootcamp: State Management 2",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "State Management",
      "Rust",
      "Stable Memory",
      "Stable Structures"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=vlu2I8TRylg",
    "image": "https://i.ytimg.com/vi/vlu2I8TRylg/maxresdefault.jpg"
  },
  {
    "index": "recVnSeG85B5AbL4S",
    "category": "Content",
    "title": "Overview of the Internet Computer ecosystem and core differences",
    "body": "ICP Rust Bootcamp: Overview of the Internet Computer ecosystem and core differences",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "ICP",
      "ICP Overview"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://youtu.be/zxt16F2CqBY?si=3OKPX-dHoqcprDfJ",
    "image": null
  },
  {
    "index": "recWlejD4TACpO4hw",
    "category": "Content",
    "title": "Overview of the Frontend for Final Project",
    "body": "ICP Rust Bootcamp: Overview of the Frontend for Final Project",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Frontend",
      "Canister Development",
      "Frontend"
    ],
    "tags": [
      "Frontend",
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=vGVb6GC3MkE",
    "image": "https://i.ytimg.com/vi/vGVb6GC3MkE/maxresdefault.jpg"
  },
  {
    "index": "recciDaiuAKRlvq2m",
    "category": "Content",
    "title": "Creating Functions 1",
    "body": "ICP Rust Bootcamp: Creating Functions 1",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Smart Contract"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=Gp_TFHI4fok",
    "image": "https://i.ytimg.com/vi/Gp_TFHI4fok/maxresdefault.jpg"
  },
  {
    "index": "receKPo3bDTc3IaWs",
    "category": "Content",
    "title": "Creating Functions 2",
    "body": "ICP Rust Bootcamp: Creating Functions 2",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Smart Contract"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=CnwPe8ItXrI",
    "image": "https://i.ytimg.com/vi/CnwPe8ItXrI/maxresdefault.jpg"
  },
  {
    "index": "reciKA9KohIvcOSJn",
    "category": "Content",
    "title": "Overview of the IC architecture and its components",
    "body": "ICP Rust Bootcamp: Overview of the IC architecture and its components",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "ICP Architecture",
      "ICP",
      "ICP Overview"
    ],
    "tags": [
      "ICP Architecture"
    ],
    "link": "https://www.youtube.com/watch?v=Z77ay0qjkJg",
    "image": "https://i.ytimg.com/vi/Z77ay0qjkJg/maxresdefault.jpg"
  },
  {
    "index": "recklBZRlsMOrT1o0",
    "category": "Content",
    "title": "Update and Query Functions",
    "body": "ICP Rust Bootcamp: Update and Query Functions",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Query Calls",
      "Update Calls"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=Evr8mdpXKbw",
    "image": "https://i.ytimg.com/vi/Evr8mdpXKbw/maxresdefault.jpg"
  },
  {
    "index": "recld0oMadIsdMx5b",
    "category": "Content",
    "title": "Updating the Candid File",
    "body": "ICP Rust Bootcamp: Updating the Candid File",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Candid"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=cV0jwORePx4",
    "image": "https://i.ytimg.com/vi/cV0jwORePx4/maxresdefault.jpg"
  },
  {
    "index": "recn9BbThMXncP8Tj",
    "category": "Content",
    "title": "State Management 1",
    "body": "ICP Rust Bootcamp: State Management 1",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Rust",
      "State Management",
      "Stable Structures",
      "Stable Memory"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=j5qWD4VPCQg",
    "image": "https://i.ytimg.com/vi/j5qWD4VPCQg/maxresdefault.jpg"
  },
  {
    "index": "recpR139ossmZwvcX",
    "category": "Content",
    "title": "Setting up the development environment for IC",
    "body": "ICP Rust Bootcamp: Setting up the development environment for IC",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Environment Setup",
      "ICP",
      "Rust",
      "Smart Contract",
      "Environment Setup"
    ],
    "tags": [
      "Environment Setup"
    ],
    "link": "https://www.youtube.com/watch?v=--2a6iCuav0",
    "image": "https://i.ytimg.com/vi/--2a6iCuav0/maxresdefault.jpg"
  },
  {
    "index": "reczWgUqCsS1AM1nY",
    "category": "Content",
    "title": "Testing the Contract",
    "body": "ICP Rust Bootcamp: Testing the Contract",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Smart Contract"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=3uxc20QaXmM",
    "image": "https://i.ytimg.com/vi/3uxc20QaXmM/maxresdefault.jpg"
  },
  {
    "index": "recqlRFJd31Q6lfBs",
    "category": "Content",
    "title": "ICRC-2: Approve and Transfer From",
    "body": "ICRC-2 is an extension of the base ICRC-1 standard. ICRC-2 specifies a way for an account owner to delegate token transfers to a third party on the owner's behalf.",
    "languages": [
      "none"
    ],
    "level": [
      "intermediate"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "DeFi",
      "Tokens",
      "Standard",
      "ICRC2"
    ],
    "tags": [
      "DeFi",
      "Tokens"
    ],
    "link": "https://github.com/dfinity/ICRC-1/blob/main/standards/ICRC-2/README.md#icrc-2-approve-and-transfer-from",
    "image": null
  },
  {
    "index": "recSbvRAxICVmVHWo",
    "category": "Content",
    "title": "Get Started with Frontend Development on ICP",
    "body": "Learn how to get started with frontend development on the Internet Computer ",
    "languages": [
      "typescript"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Frontend",
      "Asset Canister",
      "HTTP Gateway",
      "Boundary Nodes",
      "Service Worker",
      "Internet Identity"
    ],
    "tags": [
      "Canister Development",
      "Frontend"
    ],
    "link": "https://www.youtube.com/watch?v=wgv8sIMaMJM&list=PLeNYxb7vPrkj3SNntZ9ANchomvAPdrU8F&index=6",
    "image": "https://i.ytimg.com/vi/ShLxUMoqQd4/maxresdefault.jpg"
  },
  {
    "index": "recGLlsFAm2oFc0Mk",
    "category": "Content",
    "title": "Introduction to building with Azle",
    "body": "Discover the Azle SDK. Azle allows you to build Internet Computer apps using TypeScript.",
    "languages": [
      "typescript"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "Azle Language",
      "ICP Overview",
      "Setup"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://www.youtube.com/watch?v=wiajrIjDNZg&list=PLeNYxb7vPrkj3SNntZ9ANchomvAPdrU8F&index=2",
    "image": "https://i.ytimg.com/vi/ShLxUMoqQd4/maxresdefault.jpg"
  },
  {
    "index": "recjoCjzR47DJjLkx",
    "category": "Content",
    "title": "Candid: the language of the Internet Computer",
    "body": "Learn about Candid. Candid is an IDL (Interface Description Language) for canisters.",
    "languages": [
      "typescript"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Azle Language",
      "Candid"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=NTHgCnems2M&list=PLeNYxb7vPrkj3SNntZ9ANchomvAPdrU8F&index=4",
    "image": "https://i.ytimg.com/vi/ShLxUMoqQd4/maxresdefault.jpg"
  },
  {
    "index": "reczbuOQ5plyix7Y8",
    "category": "Content",
    "title": "Why and how to build a DAO?",
    "body": "Discover why the Internet Computer is particularly adapted to build a DAO and why it matters for the future of humanity.",
    "languages": [
      "typescript"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "DAO",
      "ICP Overview",
      "DAO"
    ],
    "tags": [
      "DAO"
    ],
    "link": "https://www.youtube.com/watch?v=N6L0Yir_4JU&list=PLeNYxb7vPrkj3SNntZ9ANchomvAPdrU8F&index=3",
    "image": "https://i.ytimg.com/vi/ShLxUMoqQd4/maxresdefault.jpg"
  },
  {
    "index": "recJqM15CWcF2DAmu",
    "category": "Content",
    "title": "Stable memory, Safe Upgrades & Stable Structures",
    "body": "Dive into the two different types of memories (stable vs heap) of a canister and how to deal with upgrades. ",
    "languages": [
      "typescript"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Storage",
      "Canister Development",
      "Azle Language",
      "Stable Memory",
      "Stable Structures"
    ],
    "tags": [
      "Storage",
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=NHRXadx0yPs&list=PLeNYxb7vPrkj3SNntZ9ANchomvAPdrU8F&index=5",
    "image": "https://i.ytimg.com/vi/ShLxUMoqQd4/maxresdefault.jpg"
  },
  {
    "index": "rec6CqqLrT7Kv924Z",
    "category": "Content",
    "title": "Unlock the power of Bitcoin",
    "body": "The Internet Computer allows canisters to perform HTTP outcalls. Connect Web 2.0 with Web 3.0. ",
    "languages": [
      "typescript"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Bitcoin",
      "Canister Development",
      "Azle Language",
      "Bitcoin Integration",
      "Chainkey",
      "Threshold ECDSA",
      "ckBTC"
    ],
    "tags": [
      "Bitcoin",
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=wcFkns9mcGU&list=PLeNYxb7vPrkj3SNntZ9ANchomvAPdrU8F&index=8https://www.youtube.com/watch?v=CcoT1Ao1SQU&list=PLeNYxb7vPrkj3SNntZ9ANchomvAPdrU8F&index=9",
    "image": "https://i.ytimg.com/vi/ShLxUMoqQd4/maxresdefault.jpg"
  },
  {
    "index": "recck8uj7R6cRXFWt",
    "category": "Content",
    "title": "Native oracle: HTTP Outcalls",
    "body": "The Internet Computer allows canisters to perform HTTP outcalls. Connect Web 2.0 with Web 3.0. ",
    "languages": [
      "typescript"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "HTTPS Outcalls",
      "Canister Development",
      "Azle Language",
      "HTTP Outcalls"
    ],
    "tags": [
      "HTTPS Outcalls",
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=wcFkns9mcGU&list=PLeNYxb7vPrkj3SNntZ9ANchomvAPdrU8F&index=8",
    "image": "https://i.ytimg.com/vi/ShLxUMoqQd4/maxresdefault.jpg"
  },
  {
    "index": "recxVMa0khtRIvIDa",
    "category": "Content",
    "title": "Intercanister calls, cycles and timers",
    "body": "Learn how to perform inter-canister calls, handle errors, manage your cycles, and use timers to perform CRON jobs with your canister.",
    "languages": [
      "typescript"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Azle Language",
      "Inter Canister Calls",
      "Cycles",
      "Timers"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=muc31TquAvk&list=PLeNYxb7vPrkj3SNntZ9ANchomvAPdrU8F&index=8",
    "image": "https://i.ytimg.com/vi/ShLxUMoqQd4/maxresdefault.jpg"
  },
  {
    "index": "rechXCQGhB3RX1DgI",
    "category": "Content",
    "title": "Prevent Hack to Your App",
    "body": "Make sure that your canister is safe and secure and prevents hacks!",
    "languages": [
      "typescript"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Security",
      "Canister Development",
      "Azle Language",
      "Best Practices",
      "Security"
    ],
    "tags": [
      "Security",
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=DyBu_22ZvfI&list=PLeNYxb7vPrkj3SNntZ9ANchomvAPdrU8F&index=10",
    "image": "https://i.ytimg.com/vi/ShLxUMoqQd4/maxresdefault.jpg"
  },
  {
    "index": "recWqgoQijanS1FDs",
    "category": "Content",
    "title": "Using TLA+ for Internet Computer Canisters",
    "body": "In the realm of smart contract security, TLA+ is particularly good at weeding out reentrancy bugs, a frequent type of smart contract bugs that often have disastrous consequences. However, TLA+ is a general-purpose language; it’s in no way tailored to smart contracts, and in particular the Internet Computer (IC) and its so-called canister smart contracts. Hence, figuring out how to use TLA+ to model canisters can take time; this post is intended to help you with that. It’s a technical guide that describes a general strategy for modeling canisters using TLA+.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Security",
      "Execution",
      "Testing",
      "TLA"
    ],
    "tags": [
      "Security"
    ],
    "link": "https://mynosefroze.com/blog/2023-08-09-tla_for_canisters#the-internet-computer-execution-model",
    "image": null
  },
  {
    "index": "rec358xBg3ycZRemP",
    "category": "Content",
    "title": "Monday - Getting to know Internet Computer",
    "body": "You will learn the fundamentals of Internet Computer Protocol and how its architecture works.  The important thing about this day will be the following:  Know the value proposition of the Internet computer.  Create your identity on Internet Computer.  Become a web3 user with internet computer.",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "spanish"
    ],
    "fullTags": [
      "Overview",
      "ICP Overview",
      "Spanish"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://icp-esp.gitbook.io/icp-developer/programa/lunes-conociendo-internet-computer",
    "image": null
  },
  {
    "index": "rec5C6HnGKw7iqSYS",
    "category": "Content",
    "title": "Thursday - Connect your frontend with Internet Identity",
    "body": "Today you will learn how to integrate Internet Identity into your frontend canister and consume your backend canisters with it. There will also be readings about considerations to take into account when launching your Canister into production.",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "spanish"
    ],
    "fullTags": [
      "Frontend",
      "Identity & Authentication",
      "Frontend",
      "Spanish"
    ],
    "tags": [
      "Frontend",
      "Identity & Authentication"
    ],
    "link": "https://icp-esp.gitbook.io/icp-developer/programa/jueves-conecta-tu-frontend-con-internet-identity",
    "image": null
  },
  {
    "index": "rec6C8Q75LxmdWp0V",
    "category": "Content",
    "title": "Day 0 - Setting up your development environment",
    "body": "Setting up your development environment\nInstall all the necessary packages to start developing",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "spanish"
    ],
    "fullTags": [
      "Environment Setup",
      "Environment Setup",
      "Spanish"
    ],
    "tags": [
      "Environment Setup"
    ],
    "link": "https://icp-esp.gitbook.io/icp-developer/programa/dia-0-montando-tu-ambiente-de-desarrollo",
    "image": null
  },
  {
    "index": "recWvyVsX2rchww7e",
    "category": "Content",
    "title": "Friday - Deploying Canisters",
    "body": "Today you will learn concepts to take into account when launching your Canister into production.",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "spanish"
    ],
    "fullTags": [
      "Canister Development",
      "Deploying Canister",
      "Spanish"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://icp-esp.gitbook.io/icp-developer/programa/viernes-desplegando-canisters",
    "image": null
  },
  {
    "index": "recmrMfaegbPht1f0",
    "category": "Content",
    "title": "Wednesday - A first look at the canisters",
    "body": "This day you will learn how to develop Canisters using the Motoko programming language. The topics that will be covered on this day are:\n-Data structures\n-Types of memory in canisters\n-Create your first CRUD",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "spanish"
    ],
    "fullTags": [
      "Canister Development",
      "Canisters",
      "Cycles",
      "Spanish"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://icp-esp.gitbook.io/icp-developer/programa/miercoles-un-primer-vistazo-a-los-canisters",
    "image": null
  },
  {
    "index": "recocFXhZ9GVUKPv8",
    "category": "Content",
    "title": "Tuesday - Get ready to code",
    "body": "This day you will have your environment and basic knowledge up to date to start programming your own canister on Internet Computer with Motoko.",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "spanish"
    ],
    "fullTags": [
      "Canister Development",
      "Motoko Language",
      "CDK",
      "Spanish"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://icp-esp.gitbook.io/icp-developer/programa/martes-preparate-para-codear",
    "image": null
  },
  {
    "index": "rec2h7Cn52av574qK",
    "category": "Content",
    "title": "Inside the World of Internet Computer",
    "body": "In this concise video, we will have a comprehensive understanding of this brand new computing system. First, we will discuss the differences and connections between the Internet Computer and traditional computers. Then, we will introduce its working principles in detail. We will also explore the application prospects and potential of Internet Computer in the field of cloud computing.",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "ICP Overview"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://www.youtube.com/watch?v=H1fFI9JjbEw",
    "image": "https://i.ytimg.com/vi/H1fFI9JjbEw/sddefault.jpg"
  },
  {
    "index": "recXunVi3RQX7WLgy",
    "category": "Content",
    "title": "Deploy your first dApp in 5 minutes!",
    "body": "This is a guided tutorial to help you deploy your first application on the Internet Computer in 5 minutes. You don't need any prior setup or configuration to use this repository. A GitHub account and Internet connection will be enough.",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Motoko Language",
      "Wasm",
      "Candid UI",
      "Canisters",
      "Inter Canister Calls"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://github.com/Code-and-State/deploy-first-dapp/tree/main",
    "image": null
  },
  {
    "index": "recjOzQrNXVN1JhZv",
    "category": "Content",
    "title": "Building a Cross-Chain ETH Payment and E-Commerce Platform on the Internet Computer",
    "body": "This comprehensive tutorial guides you through the process of building a decentralized e-commerce platform on the Internet Computer that can accept Ethereum (ETH) payments, handle withdrawals, and manage a digital storefront. Starting from a basic template, we’ll incrementally add features to create a robust, cross-chain solution.",
    "languages": [
      "rust"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Ethereum",
      "Canister Development",
      "Frontend",
      "HTTP Outcalls",
      "Ethereum",
      "Stable Memory",
      "Chainkey"
    ],
    "tags": [
      "Ethereum",
      "Canister Development",
      "Frontend"
    ],
    "link": "https://forum.dfinity.org/t/building-a-cross-chain-eth-payment-and-e-commerce-platform-on-the-internet-computer-a-step-by-step-tutorial/23938",
    "image": null
  },
  {
    "index": "recaMntvc1cRBmYJf",
    "category": "Content",
    "title": "Intro to Internet Computer Blockchain",
    "body": "In this video, you'll learn about the Internet Computer Ecosystem and have the essentials to kickstart your ICP journey! ",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "turkish"
    ],
    "fullTags": [
      "Overview",
      "ICP Overview",
      "Turkish"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://www.youtube.com/watch?v=-WDGhxy-ArQ",
    "image": "https://i.ytimg.com/vi/-WDGhxy-ArQ/maxresdefault.jpg"
  },
  {
    "index": "recF9AkZ37Bh8GAaF",
    "category": "Content",
    "title": "Motoko Stable Regions",
    "body": "The DFINITY Global R&D : Updates on canister testing with Rust, Neurons’ Fund enhancements, ICP-ETH interoperability, Motoko stable regions, and demonstrations of innovative tools and AgorApp community demo",
    "languages": [
      "motoko"
    ],
    "level": [
      "intermediate"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Storage",
      "Stable Memory"
    ],
    "tags": [
      "Storage"
    ],
    "link": "https://www.youtube.com/watch?v=X0VbguHICqM&t=1777s",
    "image": "https://i.ytimg.com/vi/X0VbguHICqM/maxresdefault.jpg"
  },
  {
    "index": "rec3mCd0YOMOoH3CK",
    "category": "Content",
    "title": "Internet Identity—A Secure and Privacy Preserving Identity for All Services",
    "body": "A Secure and Privacy Preserving Identity for All Services, the third event of the Internet Computer Zero to Dapp Educate Powered by Encode. Federik Rothenberger covers Authentication methods, Internet Identity Architecture, and etc",
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Security",
      "Identity & Authentication",
      "Internet Identity",
      "Authentication"
    ],
    "tags": [
      "Security",
      "Identity & Authentication"
    ],
    "link": "https://www.youtube.com/watch?v=7hIRDHoZy-k&list=PLfEHHr3qexv8hKOJBV1XR10XhUKkyPIBp&index=3",
    "image": "https://i.ytimg.com/vi/vSA_UFajHmQ/maxresdefault.jpg"
  },
  {
    "index": "rec4TUG6U3tMy0OqE",
    "category": "Content",
    "title": "Connecting Canisters to the Web with HTTPS Outcalls—No Oracles Required",
    "body": "The fourth event of the Internet Computer Zero to Dapp Educate Powered by Encode. The session was held by DFINITY's Yotam Harchol--big thanks to him for coming in and sharing his wisdom!",
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "HTTPS Outcalls",
      "Canister Development",
      "HTTP Outcalls"
    ],
    "tags": [
      "HTTPS Outcalls",
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=FvMmB38UjVk&list=PLfEHHr3qexv8hKOJBV1XR10XhUKkyPIBp&index=4",
    "image": "https://i.ytimg.com/vi/vSA_UFajHmQ/maxresdefault.jpg"
  },
  {
    "index": "recF46AJtwbcEZ1Cf",
    "category": "Content",
    "title": "Canisters — Smart Contracts on Steroids",
    "body": "The second event of the Internet Computer Zero to Dapp Educate Powered by Encode. Big thanks to Kyle Peacock and Bogdan Warinschi from DFINITY for holding the lesson!",
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Canisters",
      "Smart Contract"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://www.youtube.com/watch?v=P3ngpMedCTE&list=PLfEHHr3qexv8hKOJBV1XR10XhUKkyPIBp&index=2",
    "image": "https://i.ytimg.com/vi/vSA_UFajHmQ/maxresdefault.jpg"
  },
  {
    "index": "recGhq4KNsAAYkt52",
    "category": "Content",
    "title": "Ecosystem Project Success Story",
    "body": "The seventh event of the Internet Computer Zero to Dapp Educate Powered by Encode. The session was held by Toniq Labs' Co-founder and CEO, Bob Bodily--big thanks to him for coming in and sharing his wisdom!",
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Community",
      "Demo"
    ],
    "tags": [
      "Community"
    ],
    "link": "https://www.youtube.com/watch?v=FxoRoCvQg4w&list=PLfEHHr3qexv8hKOJBV1XR10XhUKkyPIBp&index=7",
    "image": "https://i.ytimg.com/vi/vSA_UFajHmQ/maxresdefault.jpg"
  },
  {
    "index": "recIXzHwovBChpsBG",
    "category": "Content",
    "title": "ICP Grantee Showcase",
    "body": "The eighth event of the Internet Computer Zero to Dapp Educate Powered by Encode. In this session, we welcomed three ICP grantees who talked about their journey----big thanks to our guest speakers for coming in and sharing their wisdom!",
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Community",
      "Demo"
    ],
    "tags": [
      "Community"
    ],
    "link": "https://www.youtube.com/watch?v=Th8fV4QImW8&list=PLfEHHr3qexv8hKOJBV1XR10XhUKkyPIBp&index=8",
    "image": "https://i.ytimg.com/vi/vSA_UFajHmQ/maxresdefault.jpg"
  },
  {
    "index": "recdZm25GpHOoVcI7",
    "category": "Content",
    "title": "Bitcoin Direct Integration & ckBTC — Bringing Smart Contracts to Bitcoin",
    "body": "The fifth event of the Internet Computer Zero to Dapp Educate Powered by Encode. The session was held by DFINITY's Dieter Sommer--big thanks to him for coming in and sharing his wisdom!",
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Bitcoin",
      "Bitcoin Integration",
      "Smart Contract"
    ],
    "tags": [
      "Bitcoin"
    ],
    "link": "https://www.youtube.com/watch?v=dCTlWP0vFiY&list=PLfEHHr3qexv8hKOJBV1XR10XhUKkyPIBp&index=5",
    "image": "https://i.ytimg.com/vi/vSA_UFajHmQ/maxresdefault.jpg"
  },
  {
    "index": "reckeKztEKQ6bUHg9",
    "category": "Content",
    "title": "The Internet Computer Protocol",
    "body": "The first event of the Internet Computer Zero to Dapp Educate Powered by Encode. The event was held Moritz Fuller, Dev Rel Engineer at DFINITY--big thanks to Moritz for coming in and sharing his wisdom!",
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "ICP Overview"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://www.youtube.com/watch?v=vSA_UFajHmQ&list=PLfEHHr3qexv8hKOJBV1XR10XhUKkyPIBp&index=1",
    "image": "https://i.ytimg.com/vi/vSA_UFajHmQ/maxresdefault.jpg"
  },
  {
    "index": "recxWc9LDqqgVHIVs",
    "category": "Content",
    "title": "Unlocking More Awesomeness — Dive Deeper With These Resources",
    "body": "The sixth event of the Internet Computer Zero to Dapp Educate Powered by Encode. The session was held by ",
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "ICP Architecture",
      "Overview",
      "Tooling",
      "dApp",
      "CDK"
    ],
    "tags": [
      "ICP Architecture",
      "Overview"
    ],
    "link": "https://www.youtube.com/watch?v=-xXigbvi6nA&list=PLfEHHr3qexv8hKOJBV1XR10XhUKkyPIBp&index=6",
    "image": "https://i.ytimg.com/vi/vSA_UFajHmQ/maxresdefault.jpg"
  },
  {
    "index": "recuQqb9pnC0Pzr2w",
    "category": "Content",
    "title": "Chain-key Bitcoin",
    "body": "This slide explains the Internet Computer's integration with Bitcoin, enabling smart contracts (canisters) to directly interact with the Bitcoin blockchain, and introduces Chain-Key Bitcoin (ckBTC), a fast, low-cost, and secure representation of Bitcoin backed 1:1 by actual Bitcoin.",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Bitcoin",
      "ckBTC",
      "Bitcoin Integration"
    ],
    "tags": [
      "Bitcoin"
    ],
    "link": "https://docs.google.com/presentation/d/1LTBiLsjYIuwV5fEKcg7sL8ew1sDP5tPfGbOd-r9IGEc/edit#slide=id.p",
    "image": null
  },
  {
    "index": "recOlYIQOjDRQw99K",
    "category": "Content",
    "title": "Introduction to the Internet Computer",
    "body": "In this very short learning module, we will provide you with the essential resources that you need to understand the ICP platform.",
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "ICP Overview"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://dacade.org/communities/icp/courses/rust-smart-contract-101/learning-modules/f41b39d1-e023-49a8-9a4f-f8a737b6c397",
    "image": null
  },
  {
    "index": "recXrlyy9vfHNzyoj",
    "category": "Content",
    "title": "Setting Up, Building, and Interacting with Smart Contracts on the Internet Computer",
    "body": "This module teaches you how to set up your development environment, understand the boilerplate code for a Rust project on the ICP platform, as well as build and interact with a simple messaging smart contract (canister) that performs CRUD operations.",
    "languages": [
      "rust"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Environment Setup",
      "Canisters",
      "Candid UI",
      "Stable Structures",
      "Setup",
      "Rust"
    ],
    "tags": [
      "Environment Setup"
    ],
    "link": "https://dacade.org/communities/icp/courses/rust-smart-contract-101/learning-modules/3709d471-cd65-495d-b580-c0dbc2f1f5d8",
    "image": null
  },
  {
    "index": "recOwrhRLDTZUtuOb",
    "category": "Content",
    "title": "Candid Specification",
    "body": "To document, discover, and interact with canisters (also known as services or actors) on the Internet Computer, we need an interface description language (IDL) for specifying the signature of a canister.",
    "languages": [
      "none"
    ],
    "level": [
      "expert"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Canister Development",
      "Candid"
    ],
    "tags": [
      "Canister Development"
    ],
    "link": "https://github.com/dfinity/candid/blob/master/spec/Candid.md#candid-specification",
    "image": null
  },
  {
    "index": "rec3CeGiBxtPFmRkG",
    "category": "Content",
    "title": "Internet Computer Blockchain (ICP) nedir?",
    "body": "We examine the decentralized structure of ICP and how the web3 ecosystem works. ",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "turkish"
    ],
    "fullTags": [
      "Overview",
      "ICP Overview",
      "Turkish"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://www.youtube.com/watch?v=KqN6TG1fyaA&t=10s",
    "image": "https://i.ytimg.com/vi/KqN6TG1fyaA/maxresdefault.jpg"
  },
  {
    "index": "recrOtQWJLwTfOIqy",
    "category": "Content",
    "title": "ICRC-1 token standard",
    "body": "ICRC-1 is a token standard created by the Internet Computer working group. ICRC stands for \"Internet Computer Request for Comments\", you can find documentation on the working group here. The ICRC-1 is a standard for fungible tokens on the Internet Computer. This means that any ICRC-1 ledger has to implement at least the specifications that are defined there.",
    "languages": [
      "none"
    ],
    "level": [
      "intermediate"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "DeFi",
      "Tokens",
      "ICRC1",
      "Standard"
    ],
    "tags": [
      "DeFi",
      "Tokens"
    ],
    "link": "https://internetcomputer.org/docs/current/developer-docs/integrations/icrc-1/",
    "image": null
  },
  {
    "index": "recdy7XW7pWvS8Ekq",
    "category": "Content",
    "title": "Security best practices",
    "body": "This document provides security best practices for developing canisters and web apps served by canisters on the Internet Computer. These best practices are mostly inspired by issues found in security reviews.",
    "languages": [
      "none"
    ],
    "level": [
      "intermediate"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Security",
      "Canister Development",
      "Best Practices",
      "Security"
    ],
    "tags": [
      "Security",
      "Canister Development"
    ],
    "link": "https://internetcomputer.org/docs/current/developer-docs/security/",
    "image": null
  },
  {
    "index": "recYtYI59TG4AOwjg",
    "category": "Content",
    "title": "Awesome Motoko",
    "body": "An awesome list of Motoko code and resources curated by the community.\n\nThe Motoko programming language is a new, modern and type safe language for developers who want to build the next generation of distributed applications to run on the Internet Computer blockchain network.",
    "languages": [
      "motoko"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "Motoko Language",
      "Candid",
      "Tooling",
      "Stable Memory",
      "DAO",
      "Authentication",
      "Testing",
      "ICP Overview",
      "Chainkey",
      "vetKeys",
      "Cycles Management"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://github.com/motoko-unofficial/awesome-motoko",
    "image": null
  },
  {
    "index": "rec62YvQG2Xysu931",
    "category": "Content",
    "title": "Internet Computer'da Kod Yazmak ve Deploy Etmek",
    "body": "We cover the development part of the Internet Computer ecosystem!   By watching this video, you will learn how to write and deploy code in Internet Computer, and you will be able to successfully apply this knowledge in your own projects.",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "turkish"
    ],
    "fullTags": [
      "Overview",
      "ICP Overview",
      "Turkish"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://www.youtube.com/watch?v=9Ww-vSLDlg4",
    "image": "https://i.ytimg.com/vi/9Ww-vSLDlg4/maxresdefault.jpg"
  },
  {
    "index": "recnpMIcb8S3gfgUH",
    "category": "Content",
    "title": "NFT development",
    "body": "An NFT or non-fungible token is a record on a blockchain that is associated with a particular digital or physical asset. The unique digital representation on a blockchain allows the proving of ownership as well as their trading.",
    "languages": [
      "none"
    ],
    "level": [
      "intermediate"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "NFT",
      "Canister Development",
      "NFT",
      "Best Practices"
    ],
    "tags": [
      "NFT",
      "Canister Development"
    ],
    "link": "https://internetcomputer.org/docs/current/developer-docs/use-cases/considerations-for-nft-devs",
    "image": null
  },
  {
    "index": "recoSaqiGIibXQUwU",
    "category": "Content",
    "title": "Gas Fee ve Cycle Sistemi Ödemeleri",
    "body": "We will explore the importance and usage areas of ICP by entering the web3 ecosystem. Keep following us!",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "turkish"
    ],
    "fullTags": [
      "Overview",
      "ICP Overview",
      "Turkish"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://www.youtube.com/watch?v=L1Ce2q018KA",
    "image": "https://i.ytimg.com/vi/L1Ce2q018KA/maxresdefault.jpg"
  },
  {
    "index": "rec3ZVcVfN8AMNl0u",
    "category": "Content",
    "title": "Akıllı Sözleşme Türleri ve Projelerden Örnekler",
    "body": "We will explore the importance and usage areas of ICP by entering the web3 ecosystem. ",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "turkish"
    ],
    "fullTags": [
      "Overview",
      "ICP Overview",
      "Turkish"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://www.youtube.com/watch?v=CydnICyJ2RA",
    "image": "https://i.ytimg.com/vi/CydnICyJ2RA/maxresdefault.jpg"
  },
  {
    "index": "recFBEGzdbVqRNshT",
    "category": "Content",
    "title": "Smart Contract (Akıllı Sözleşme) nedir?",
    "body": "We will discuss the concept of Smart Contract, detailed information on how it can be developed, the software languages ​​used and what steps should be followed in this process.  ",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "video"
    ],
    "contentLanguages": [
      "turkish"
    ],
    "fullTags": [
      "Overview",
      "ICP Overview",
      "Turkish"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://www.youtube.com/watch?v=Ng8L0gstyXo",
    "image": "https://i.ytimg.com/vi/Ng8L0gstyXo/maxresdefault.jpg"
  },
  {
    "index": "reckZp5SJv9uLgVZ3",
    "category": "Content",
    "title": "Awesome Internet Computer",
    "body": "The Internet Computer is a public blockchain that hosts smart contracts that run at web speed, can serve web from cyberspace, run efficiently, and can scale within an environment that has unbounded capacity. Smart contracts are a profoundly new and superior form of tamperproof and unstoppable software. They can imbue systems and services with new properties, enabling the reimagination of websites, systems, internet services and finance.",
    "languages": [
      "none"
    ],
    "level": [
      "beginner"
    ],
    "contentType": [
      "text"
    ],
    "contentLanguages": [
      "english"
    ],
    "fullTags": [
      "Overview",
      "Motoko Language",
      "Candid",
      "Tooling",
      "Stable Memory",
      "DAO",
      "Authentication",
      "Rust",
      "Testing",
      "ICP Overview",
      "Chainkey",
      "vetKeys",
      "Cycles Management",
      "Turkish"
    ],
    "tags": [
      "Overview"
    ],
    "link": "https://github.com/dfinity/awesome-internet-computer",
    "image": null
  }
]